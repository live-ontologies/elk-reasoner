<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>elk-parent</artifactId>
		<groupId>io.github.liveontologies</groupId>
		<version>0.6.1-SNAPSHOT</version>
	</parent>

	<artifactId>elk-protege</artifactId>
	<packaging>bundle</packaging>

	<name>ELK Reasoner Protege Plug-in</name>
	<description>ELK plug-in for Protege ontology editor</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Protege requires Java 8 -->
		<java.required.version>8</java.required.version>
		<protege.lower.version>5</protege.lower.version>
		<protege.upper.version>6</protege.upper.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Import versions of dependencies from Protege -->
			<dependency>
				<groupId>edu.stanford.protege</groupId>
				<artifactId>protege-parent</artifactId>
				<version>${protege.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Remaining dependencies use the default versions -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>elk-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>edu.stanford.protege</groupId>
			<artifactId>protege-editor-core</artifactId>
			<version>${protege.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.stanford.protege</groupId>
			<artifactId>protege-editor-owl</artifactId>
			<version>${protege.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-osgidistribution</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>net.sourceforge.owlapi</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.liveontologies</groupId>
					<artifactId>owlapi-proof</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-reasoner</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owl-model</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owl-implementation</artifactId>
			<version>${project.version}</version>		
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-proofs</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-common</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-io</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-logging</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-concurrent</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-collections</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.liveontologies</groupId>
			<artifactId>owlapi-proof</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.liveontologies</groupId>
			<artifactId>puli</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.liveontologies</groupId>
			<artifactId>protege-proof-explanation</artifactId>
			<version>${protege-proof-explanation.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.github.liveontologies</groupId>
			<artifactId>protege-proof-justification</artifactId>
			<version>0.1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi</artifactId>
			<version>${project.version}</version>
			<classifier>test-sources</classifier>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>net.sourceforge.owlapi</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owlapi</artifactId>
			<version>${project.version}</version>
			<classifier>test-resources</classifier>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>net.sourceforge.owlapi</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owl-implementation</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-reasoner</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-proofs</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>		
		<dependency>
			<!-- Needed for classification correctness tests. Expected
			taxonomies 
				are loaded using the JavaCC parser. -->
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-owl-parsing-javacc</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-concurrent</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>elk-util-testing</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>plugin.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>analyze</id>
						<configuration>
							<ignoredUnusedDeclaredDependencies>
								<usedDependency>${project.groupId}:elk-owlapi:jar:${project.version}</usedDependency>
								<usedDependency>${project.groupId}:elk-owl-parsing-javacc</usedDependency>
								<usedDependency>${project.groupId}:elk-proofs:test-jar</usedDependency>
							</ignoredUnusedDeclaredDependencies>
							<ignoredNonTestScopedDependencies>
								<ignoredNonTestScopedDependency>org.liveontologies:owlapi-proof</ignoredNonTestScopedDependency>
							</ignoredNonTestScopedDependencies>
						</configuration>
					</execution>
					<execution>
						<id>unpack-sources</id>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>elk-owlapi</artifactId>
									<version>${project.version}</version>
									<classifier>test-sources</classifier>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/test/java</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>elk-owlapi</artifactId>
									<version>${project.version}</version>
									<classifier>test-resources</classifier>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/test/resources</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/test/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.build.directory}/test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Implementation-Title>${project.parent.name}</Implementation-Title>
						<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
						<Implementation-Version>${project.version}.${maven.build.timestamp}</Implementation-Version>
						<Bundle-SymbolicName>${protege.pluginId};singleton:=true</Bundle-SymbolicName>
						<Export-Package>!*</Export-Package>
						<Embed-Dependency>*;scope=provided;inline=true</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>
						<Embed-StripGroup>true</Embed-StripGroup>
						<Update-Url>${protege.update.url}/p5.update.properties</Update-Url>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- with this profile put META-INF/MANIFEST.MF, plugin.xml, and embed 
				dependencies so that Eclipse/PDE can find them; to use in Eclipse right click 
				on the project > Configure > Convert to Plug-in Projects... -->
			<id>eclipse</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
												<include>plugin.xml</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<manifestLocation>META-INF</manifestLocation>
							<instructions>
								<Bundle-ClassPath>target/dependency,.</Bundle-ClassPath>
							</instructions>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>install-non-bundle-dependencies</id>
								<phase>install</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includeScope>provided</includeScope>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
